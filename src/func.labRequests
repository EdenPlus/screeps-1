/*
The purpose of this module is to make requests to labs.
These requests focus on production and boosts.

The reason for this module is because, the labs will not make any initial requests, nor should they.
The labs will never have a reason to make any resource. Thus, another part of the code will be used to tell labs to produce minerals.

While it is true that the labs won't ever make an initial production request, the labs will make sub-requests in order to complete a request.

These sub-requests are as follows:
** Fill request **
    Not enough of a component resource in the lab, so more must be inserted.
    This is the primary means of getting resources into a lab.

** Empty Request **
    One of the labs being used has no space for a production request execution.

** Production Request **
    Not enough of a non-base component resource is available for use, thus needing a production sub-request.
    This acts as a secondary action should there not be enough of a given resource to be provided by a fill request.
*/

/*
Build an id for a request based on passed information
*/
function buildRID(labID, rType, resource) {
    return labID + "_" + rType + "_" + resource;
}

/*
Create a requests to have a lab filled with a resource of the given amount
*/
function requestFill(labID, resource, amount) {
    var rid = buildRID(labID, "fill", resource);
    Memory.labRequests.push({rType: "fill", rid: rid, lid: labID, resource: resource, amount: amount});
    return rid;
}

/*
Make a request for the designated lamb to have it's resources removed from it
*/
function requestEmpty(labID, resource, amount) {
    var rid = buildRID(labID, "empty", resource);
    Memory.labRequests.push({rType: "empty", rid: rid, lid: labID, resource: resource, amount: amount});
    return rid;
}

/*
Create a request to have a given lab boost a given creep
*/
function requestBoost(labID, creepID, resource, amount) {
    var rid = buildRID(labID, "boost", resource);
    Memory.labRequests.push({rType: "boost", rid: rid, lid: labID, cid: creepID, resource: resource, amount: amount});
    return rid;
}

/*
Create a resource production request
*/
function requestProduce(labID, sLab1, sLab2, resource, amount) {
    var rid = buildRID(labID, "produce", resource);
    Memory.labRequests.push({rType: "produce", rid: rid, lid: labID, sLab1: sLab1, sLab2: sLab2, resource: resource, amount: amount, pending: []});
    return rid;
}

module.exports = {
    requestFill: requestFill,
    requestEmpty: requestEmpty,
    requestBoost: requestBoost,
    requestProduce: requestProduce
};
